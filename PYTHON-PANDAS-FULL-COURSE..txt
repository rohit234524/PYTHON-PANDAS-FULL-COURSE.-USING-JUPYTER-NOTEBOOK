[1]
import numpy as np
import pandas as pd
[2]
dict1={
    "name":["Rohit","Vikash","Rahul"],
    "marks":[92,65,98],
    "city":["Vaishali","Patna","Jodhpur"]
}
[3]
dict1
{'name': ['Rohit', 'Vikash', 'Rahul'],
 'marks': [92, 65, 98],
 'city': ['Vaishali', 'Patna', 'Jodhpur']}
[4]
df=pd.DataFrame(dict1)
[5]
df

[6]
df.to_csv('Friends.csv')
[7]
df.to_csv('Friends_index_False.csv',index=False)
[8]
df.head(2)

[9]
df.tail(2)

[10]
df.describe()

[11]
vaishali=pd.read_csv('Vaishali.csv')
[12]
vaishali

[13]
vaishali["Speed"][0]=50
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\4057742152.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  vaishali["Speed"][0]=50

[14]
vaishali

[15]
vaishali.to_csv("Vaishali.csv")
[16]
vaishali.index=["first","second","third","Four","Five","Six","seven"]
[17]
vaishali

[18]
vaishali.head()

[19]
vaishali.tail()

[20]
ser=pd.Series(np.random.rand(34))
[21]
ser
0     0.722079
1     0.561298
2     0.748280
3     0.108089
4     0.770931
5     0.378727
6     0.540774
7     0.221247
8     0.416407
9     0.832276
10    0.623068
11    0.702832
12    0.457584
13    0.140202
14    0.972476
15    0.119053
16    0.122972
17    0.597258
18    0.530073
19    0.536790
20    0.313995
21    0.253272
22    0.227361
23    0.520932
24    0.760511
25    0.562831
26    0.206489
27    0.929224
28    0.373217
29    0.136882
30    0.839010
31    0.924703
32    0.593511
33    0.414211
dtype: float64
[22]
type(ser)
pandas.core.series.Series
[23]
newdf=pd.DataFrame(np.random.rand(334,5),index=np.arange(334))
[24]
newdf

[25]
type(newdf)
pandas.core.frame.DataFrame
[26]
newdf.describe()

[27]
newdf.dtypes
0    float64
1    float64
2    float64
3    float64
4    float64
dtype: object
[28]
newdf[0][0]="Rohit"
[29]
newdf.dtypes
0     object
1    float64
2    float64
3    float64
4    float64
dtype: object
[30]
newdf.head()

[31]
newdf[0][2]="Vaishali"
[32]
newdf.head()

[33]
newdf.index
Int64Index([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,
            ...
            324, 325, 326, 327, 328, 329, 330, 331, 332, 333],
           dtype='int64', length=334)
[34]
newdf.columns
RangeIndex(start=0, stop=5, step=1)
[35]
newdf.to_numpy()
array([['Rohit', 0.06598657742349612, 0.9517227015347959,
        0.1478378668780066, 0.07481017091030395],
       [0.1904324320482479, 0.3147378952766402, 0.5168251446643316,
        0.568960336368508, 0.04631619664847242],
       ['Vaishali', 0.05090118589968573, 0.7556817172381426,
        0.32545268205293654, 0.11766359153241601],
       ...,
       [0.37139590543826206, 0.9028006192171005, 0.4448612984768566,
        0.8093686868938245, 0.3750923565955955],
       [0.36711823308247016, 0.803031327030033, 0.28056046428380743,
        0.2699491233075775, 0.8292117326233654],
       [0.8479252829673816, 0.6619003151666326, 0.13436985343893304,
        0.6770315118357048, 0.8769445772651411]], dtype=object)
[36]
newdf.T

[37]
newdf.head()

[38]
newdf.sort_index(axis=0,ascending=False)

[39]
newdf.sort_index(axis=1,ascending=True)

[40]
newdf[0][0]
'Rohit'
[41]
newdf[0]
0         Rohit
1      0.190432
2      Vaishali
3      0.397646
4      0.972052
         ...   
329    0.514909
330    0.461639
331    0.371396
332    0.367118
333    0.847925
Name: 0, Length: 334, dtype: object
[42]
type(newdf[0])
pandas.core.series.Series
[43]
newdf2=newdf # view 
[44]
newdf2[0][0]=76.20
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\3355731907.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  newdf2[0][0]=76.20

[45]
newdf

[46]
newdf2=newdf.copy()
[47]
newdf2[0][0]=7582
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\2236463199.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  newdf2[0][0]=7582

[48]
newdf

[49]
newdf.loc[0,0]=654
[50]
newdf.head(2)

[51]
newdf.columns=list("ABCDE")
[52]
newdf.head()

[53]
newdf.loc[0,0]="Saloni"
[54]
newdf.head()

[55]
newdf[0][2]="Deepak"
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\3308172263.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  newdf[0][2]="Deepak"

[56]
newdf.head()

[57]
newdf.loc[2,"B"]="Rohit"
[58]
newdf.head()

[59]
newdf.drop(0,axis=1)

[60]
newdf.loc[[1,2], ['C','D']]

[61]
newdf.loc[[2,20],["B","C","E"]]

[62]
newdf.loc[:,["B","C"]] # all row print

[63]
newdf.loc[[1,2],:]  # all column print

[64]
newdf.loc[(newdf["C"]<0.4)]

[65]
newdf.loc[(newdf["C"]<0.4) & (newdf["C"]>0.1)]

[66]
newdf.head(2)

[67]
newdf.drop(0,axis=1)

[68]
newdf.head(2)

[69]
newdf.iloc[0,4]
0.07481017091030395
[70]
newdf.iloc[2,4]
0.11766359153241601
[71]
newdf.iloc[[0,4],[1,2]]

[72]
newdf.head(3)

[73]
newdf.drop([0], axis=0)

[74]
newdf.drop(["A"], axis=1,inplace=True)
[75]
newdf

[76]
newdf=pd.DataFrame(np.random.rand(334,5),index=np.arange(334))
[77]
newdf

[78]
newdf.columns=list("ABCDE")
[79]
newdf

[80]
newdf.reset_index()

[81]
newdf.reset_index(drop=True)

[82]
newdf.reset_index(drop=True,inplace=True)
[83]
newdf

[84]
newdf["B"].isnull()
0      False
1      False
2      False
3      False
4      False
       ...  
329    False
330    False
331    False
332    False
333    False
Name: B, Length: 334, dtype: bool
[85]
newdf.loc[0,0]="Rohit"
[86]
newdf

[87]
newdf[0].isnull()
0      False
1       True
2       True
3       True
4       True
       ...  
329     True
330     True
331     True
332     True
333     True
Name: 0, Length: 334, dtype: bool
[88]
newdf

[89]
newdf[0]=None
[90]
newdf

[91]
newdf[0].isnull()
0      True
1      True
2      True
3      True
4      True
       ... 
329    True
330    True
331    True
332    True
333    True
Name: 0, Length: 334, dtype: bool
[92]
newdf.loc[:,["0"]]=56
[93]
newdf

[94]
newdf.dropna()

[95]
newdf.dropna(how="all")

[96]
newdf.dropna(how="all",axis=1)

[97]
newdf.drop_duplicates()

[98]
newdf.drop_duplicates(subset=[0])

[99]
newdf.drop_duplicates(subset=["B"],keep="last")

[100]
newdf.drop_duplicates(subset=["B"],keep=False)

[101]
newdf.shape
(334, 7)
[102]
newdf.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 334 entries, 0 to 333
Data columns (total 7 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   A       334 non-null    float64
 1   B       334 non-null    float64
 2   C       334 non-null    float64
 3   D       334 non-null    float64
 4   E       334 non-null    float64
 5   0       0 non-null      object 
 6   0       334 non-null    int64  
dtypes: float64(5), int64(1), object(1)
memory usage: 18.4+ KB

[103]
newdf["B"].value_counts(dropna=True)
0.285711    1
0.365749    1
0.174139    1
0.145657    1
0.889764    1
           ..
0.784481    1
0.139401    1
0.818884    1
0.912293    1
0.668005    1
Name: B, Length: 334, dtype: int64
[104]
newdf.notnull()

[105]
newdf.isnull()

[106]
# Create a database which contains only integer with 3 rows and 2 columns
# run following dataframe methods on them:
df.describe()
df.mean()
df.corr()
df.count()
df.max()
df.median()
df.std()
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\4243571000.py:4: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.mean()
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\4243571000.py:8: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.median()
C:\Users\Rohit\AppData\Local\Temp\ipykernel_15272\4243571000.py:9: FutureWarning: Dropping of nuisance columns in DataFrame reductions (with 'numeric_only=None') is deprecated; in a future version this will raise TypeError.  Select only valid columns before calling the reduction.
  df.std()

marks    17.578396
dtype: float64
[107]
newdf.std()
A    0.286522
B    0.291808
C    0.292684
D    0.296153
E    0.292423
0         NaN
0    0.000000
dtype: float64
[108]
newdf.median()
A     0.491517
B     0.517836
C     0.504732
D     0.524366
E     0.535546
0          NaN
0    56.000000
dtype: float64
[109]
Vaishali=pd.read_excel("Vaishali1.xlsx")
[110]
Vaishali

[111]
Vaishali.iloc[0,0]=95
[112]
Vaishali


[113]
Vaishali=pd.read_excel("Vaishali1.xlsx",sheet_name="Friends_index_False")
[114]
Vaishali

[115]
df=pd.DataFrame({"Name":["Alfred","Rohit","Satya"],
                "Toy":["Car","Bus","Truck"],
                "Born":["1940-04-25","2008-09-14","2006-04-23"]})
[116]
df

rohit

rohit

rohit

rohit

#p